[{"F:\\Role_Base_App\\client\\src\\components\\signup.js":"1","F:\\Role_Base_App\\client\\src\\components\\agent.js":"2","F:\\Role_Base_App\\client\\src\\App.js":"3","F:\\Role_Base_App\\client\\src\\components\\home.js":"4","F:\\Role_Base_App\\client\\src\\context\\userContext.js":"5","F:\\Role_Base_App\\client\\src\\components\\authOptions.js":"6","F:\\Role_Base_App\\client\\src\\index.js":"7","F:\\Role_Base_App\\client\\src\\components\\customer.js":"8","F:\\Role_Base_App\\client\\src\\api\\index.js":"9","F:\\Role_Base_App\\client\\src\\components\\login.js":"10","F:\\Role_Base_App\\client\\src\\components\\header.js":"11"},{"size":6946,"mtime":1607435827267,"results":"12","hashOfConfig":"13"},{"size":5237,"mtime":1607257021757,"results":"14","hashOfConfig":"13"},{"size":2552,"mtime":1607434470797,"results":"15","hashOfConfig":"13"},{"size":1354,"mtime":1606656662619,"results":"16","hashOfConfig":"13"},{"size":75,"mtime":1606638688468,"results":"17","hashOfConfig":"13"},{"size":1482,"mtime":1607439201265,"results":"18","hashOfConfig":"13"},{"size":161,"mtime":1606299943170,"results":"19","hashOfConfig":"13"},{"size":157,"mtime":1606658296417,"results":"20","hashOfConfig":"13"},{"size":1271,"mtime":1606748818929,"results":"21","hashOfConfig":"13"},{"size":2472,"mtime":1607439946806,"results":"22","hashOfConfig":"13"},{"size":387,"mtime":1606654094794,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1oxy7sx",{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Role_Base_App\\client\\src\\components\\signup.js",["48"],"F:\\Role_Base_App\\client\\src\\components\\agent.js",["49","50","51"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nconst Agent = () => {\r\nconst [usersdata,setUsersData] = useState([]);\r\nconst [userloan,setUserLoan] = useState({\r\n    tenure:'',\r\n    interest:'',\r\n    customerId: ''\r\n});\r\nlet [loanusers,setLoanUsers] = useState([]);\r\n\r\nlet users = [];\r\nconst getUsers = () => axios.get('http://localhost:9000/users/')\r\n.then(res => {\r\n    console.log('users are',res);\r\n    users = res.data;\r\n    setUsersData(users);\r\n    \r\n}).catch(err => {\r\n    console.log(err);\r\n}) ;\r\n\r\n\r\nlet loanUserData = [];\r\nconst getLoanUsers = () => {\r\n    axios.get(`http://localhost:9000/users/getLoanUsers`)\r\n    .then(res => {\r\n        console.log('loan users are',res);  \r\n        loanUserData = JSON.stringify(res.data);\r\n        setLoanUsers(loanUserData);\r\n        console.log('uuuuuuuuuu',loanusers); \r\n\r\n    }).catch(err => {\r\n        console.log(err);\r\n    })\r\n}\r\n\r\n\r\n    useEffect(()=>{\r\n         getUsers();\r\n         getLoanUsers()\r\n    },[])\r\n\r\n    const clearInput = () => {\r\n        setUserLoan({\r\n            tenure: '',\r\n            interest: '',\r\n            customerId: ''\r\n          });\r\n    }\r\n\r\n    const updateField = e => {\r\n        console.log(e.target.name)\r\n        console.log(e.target.value)\r\n\r\n        setUserLoan({\r\n            \r\n          ...userloan,\r\n          [e.target.name]: e.target.value\r\n        });\r\n      };\r\n \r\n    const saveLoanData = (e) => {\r\n        e.preventDefault();\r\n        console.log(userloan)\r\n        axios.post('http://localhost:9000/users/generateLoan', userloan)\r\n        .then(res => {\r\n            console.log('users are',res);  \r\n            console.log('users are',res.data);\r\n            console.log(res.message);  \r\n\r\n        }).catch(err => {\r\n            console.log(err);\r\n        }) ;\r\n\r\n        clearInput();\r\n    }\r\n    return (\r\n        \r\n        \r\n            <div className=\"components agent-component\"> \r\n            <h3 className=\"top-label\">User details :</h3> \r\n            \r\n            <table className=\"admin-table\">\r\n                <tr>\r\n                    <th>Firstname</th>\r\n                    <th>Lastname</th>\r\n                    <th>Email</th>\r\n                    {/* <th>Action</th> */}\r\n                    {/* <th>Tenure</th>\r\n                    <th>Interest</th>\r\n                    <th>Action</th> */}\r\n\r\n                </tr>\r\n                {\r\n                \r\n                usersdata.map((user,index) => user.role === 'Customer' ?\r\n\r\n\r\n                    <tr>\r\n                        <td>{user.firstname }</td>\r\n                        <td>{user.lastname}</td>\r\n                        <td>{user.email}</td>\r\n                      \r\n\r\n                            {/* {loanusers[index].customerId === user._id && loanusers[index].state === 'New' ?\r\n                            <td>Loan already generated</td>\r\n\r\n                            : \r\n                            <td>\r\n                            <form onSubmit={saveLoanData} className='form-agent'>\r\n                            \r\n                                <select \r\n                                value={userloan.tenure} \r\n                                className='input-box form-agent-child' \r\n                                name=\"tenure\" id=\"tenure\" \r\n                                onChange={(e) => {\r\n                                setUserLoan({...userloan,[userloan.customerId]: user._id});\r\n                                userloan.customerId = user._id;\r\n                                 updateField(e)}}\r\n                                required>\r\n                                    \r\n                                    <option value=\"Tenure\">Tenure</option>\r\n                                    <option value=\"4-months\">4 months</option>\r\n                                    <option value=\"8-months\">8 months</option>\r\n                                    <option value=\"12-months\">12 months</option>\r\n                                </select>\r\n        \r\n                            \r\n                                <select \r\n                                value={userloan.interest} \r\n                                className='input-box form-agent-child' \r\n                                name=\"interest\" id=\"interest\" \r\n                                onChange={(e) => updateField(e)}\r\n                                required>\r\n                                    \r\n                                    <option value=\"Interest\">Interest</option>\r\n                                    <option value=\"10\">10% </option>\r\n                                    <option value=\"20\">20%</option>\r\n                                    <option value=\"40\">40%</option>\r\n                                </select>\r\n                               \r\n                                <button type=\"submit\" className=\"form-agent-child\">Generate Loan </button>\r\n                                </form>\r\n                            </td>\r\n                           \r\n\r\n                            \r\n                        } */}\r\n                          \r\n                    </tr>\r\n            : '' )\r\n        }\r\n            \r\n                </table> \r\n               \r\n        </div>\r\n    )\r\n}\r\nexport default Agent;",["52","53"],"F:\\Role_Base_App\\client\\src\\App.js",[],"F:\\Role_Base_App\\client\\src\\components\\home.js",[],"F:\\Role_Base_App\\client\\src\\context\\userContext.js",[],"F:\\Role_Base_App\\client\\src\\components\\authOptions.js",["54","55"],"F:\\Role_Base_App\\client\\src\\index.js",[],"F:\\Role_Base_App\\client\\src\\components\\customer.js",[],"F:\\Role_Base_App\\client\\src\\api\\index.js",[],"F:\\Role_Base_App\\client\\src\\components\\login.js",[],"F:\\Role_Base_App\\client\\src\\components\\header.js",[],{"ruleId":"56","severity":1,"message":"57","line":17,"column":26,"nodeType":"58","messageId":"59","endLine":17,"endColumn":43},{"ruleId":"60","severity":1,"message":"61","line":42,"column":7,"nodeType":"62","endLine":42,"endColumn":9,"suggestions":"63"},{"ruleId":"56","severity":1,"message":"64","line":52,"column":11,"nodeType":"58","messageId":"59","endLine":52,"endColumn":22},{"ruleId":"56","severity":1,"message":"65","line":63,"column":11,"nodeType":"58","messageId":"59","endLine":63,"endColumn":23},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"56","severity":1,"message":"70","line":10,"column":13,"nodeType":"58","messageId":"59","endLine":10,"endColumn":17},{"ruleId":"56","severity":1,"message":"71","line":13,"column":11,"nodeType":"58","messageId":"59","endLine":13,"endColumn":25},"no-unused-vars","'setRegisteredUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getLoanUsers' and 'getUsers'. Either include them or remove the dependency array.","ArrayExpression",["72"],"'updateField' is assigned a value but never used.","'saveLoanData' is assigned a value but never used.","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'role' is assigned a value but never used.","'registereduser' is assigned a value but never used.",{"desc":"75","fix":"76"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getLoanUsers, getUsers]",{"range":"77","text":"78"},[997,999],"[getLoanUsers, getUsers]"]